//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_Inserting(global::LightSwitchApplication.AuditAuditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_Inserted(global::LightSwitchApplication.AuditAuditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_Updating(global::LightSwitchApplication.AuditAuditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_Updated(global::LightSwitchApplication.AuditAuditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_Deleting(global::LightSwitchApplication.AuditAuditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_Deleted(global::LightSwitchApplication.AuditAuditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_Validate(global::LightSwitchApplication.AuditAuditor entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditAuditors_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditAuditor, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_Inserting(global::LightSwitchApplication.AuditFinding entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_Inserted(global::LightSwitchApplication.AuditFinding entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_Updating(global::LightSwitchApplication.AuditFinding entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_Updated(global::LightSwitchApplication.AuditFinding entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_Deleting(global::LightSwitchApplication.AuditFinding entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_Deleted(global::LightSwitchApplication.AuditFinding entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_Validate(global::LightSwitchApplication.AuditFinding entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFindings_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditFinding, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_Inserting(global::LightSwitchApplication.Auditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_Inserted(global::LightSwitchApplication.Auditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_Updating(global::LightSwitchApplication.Auditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_Updated(global::LightSwitchApplication.Auditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_Deleting(global::LightSwitchApplication.Auditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_Deleted(global::LightSwitchApplication.Auditor entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_Validate(global::LightSwitchApplication.Auditor entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Auditors_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Auditor, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_Inserting(global::LightSwitchApplication.Audit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_Inserted(global::LightSwitchApplication.Audit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_Updating(global::LightSwitchApplication.Audit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_Updated(global::LightSwitchApplication.Audit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_Deleting(global::LightSwitchApplication.Audit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_Deleted(global::LightSwitchApplication.Audit entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_Validate(global::LightSwitchApplication.Audit entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audits_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Audit, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_Inserting(global::LightSwitchApplication.AuditStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_Inserted(global::LightSwitchApplication.AuditStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_Updating(global::LightSwitchApplication.AuditStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_Updated(global::LightSwitchApplication.AuditStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_Deleting(global::LightSwitchApplication.AuditStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_Deleted(global::LightSwitchApplication.AuditStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_Validate(global::LightSwitchApplication.AuditStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatuses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_Inserting(global::LightSwitchApplication.AuditType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_Inserted(global::LightSwitchApplication.AuditType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_Updating(global::LightSwitchApplication.AuditType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_Updated(global::LightSwitchApplication.AuditType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_Deleting(global::LightSwitchApplication.AuditType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_Deleted(global::LightSwitchApplication.AuditType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_Validate(global::LightSwitchApplication.AuditType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.Employee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_Inserting(global::LightSwitchApplication.FindingAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_Inserted(global::LightSwitchApplication.FindingAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_Updating(global::LightSwitchApplication.FindingAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_Updated(global::LightSwitchApplication.FindingAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_Deleting(global::LightSwitchApplication.FindingAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_Deleted(global::LightSwitchApplication.FindingAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_Validate(global::LightSwitchApplication.FindingAction entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingActions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.FindingAction, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyAssignedAuditFindings_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAssignedAuditFindings_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyAssignedAuditFindings_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.AuditFinding> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAssignedAuditFindings_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AuditFinding> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAssignedAuditFindings_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyAuditFindingActions_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAuditFindingActions_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyAuditFindingActions_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.FindingAction> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAuditFindingActions_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.FindingAction> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAuditFindingActions_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditAuditor>
                __AuditAuditorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditAuditor>(
                    "AuditAuditors",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditAuditors_Filter);
            private static bool __AuditAuditors_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditAuditors_CanInsert(ref result);
                return result;
            }
            private static bool __AuditAuditors_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditAuditors_CanUpdate(ref result);
                return result;
            }
            private static bool __AuditAuditors_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditAuditors_CanDelete(ref result);
                return result;
            }
            private static bool __AuditAuditors_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditAuditors_CanRead(ref result);
                return result;
            }
            private static void __AuditAuditors_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditAuditor e)
            {
                d.AuditAuditors_Inserting(e);
            }
            private static void __AuditAuditors_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditAuditor e)
            {
                d.AuditAuditors_Inserted(e);
            }
            private static void __AuditAuditors_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditAuditor e)
            {
                d.AuditAuditors_Updating(e);
            }
            private static void __AuditAuditors_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditAuditor e)
            {
                d.AuditAuditors_Updated(e);
            }
            private static void __AuditAuditors_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditAuditor e)
            {
                d.AuditAuditors_Deleting(e);
            }
            private static void __AuditAuditors_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditAuditor e)
            {
                d.AuditAuditors_Deleted(e);
            }
            private static void __AuditAuditors_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditAuditor e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AuditAuditors_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditAuditor, bool>> __AuditAuditors_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditAuditor, bool>> filter = null;
                d.AuditAuditors_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditFinding>
                __AuditFindingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditFinding>(
                    "AuditFindings",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditFindings_Filter);
            private static bool __AuditFindings_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditFindings_CanInsert(ref result);
                return result;
            }
            private static bool __AuditFindings_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditFindings_CanUpdate(ref result);
                return result;
            }
            private static bool __AuditFindings_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditFindings_CanDelete(ref result);
                return result;
            }
            private static bool __AuditFindings_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditFindings_CanRead(ref result);
                return result;
            }
            private static void __AuditFindings_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditFinding e)
            {
                d.AuditFindings_Inserting(e);
            }
            private static void __AuditFindings_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditFinding e)
            {
                d.AuditFindings_Inserted(e);
            }
            private static void __AuditFindings_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditFinding e)
            {
                d.AuditFindings_Updating(e);
            }
            private static void __AuditFindings_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditFinding e)
            {
                d.AuditFindings_Updated(e);
            }
            private static void __AuditFindings_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditFinding e)
            {
                d.AuditFindings_Deleting(e);
            }
            private static void __AuditFindings_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditFinding e)
            {
                d.AuditFindings_Deleted(e);
            }
            private static void __AuditFindings_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AuditFindings_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditFinding, bool>> __AuditFindings_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditFinding, bool>> filter = null;
                d.AuditFindings_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Auditor>
                __AuditorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Auditor>(
                    "Auditors",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Auditors_Filter);
            private static bool __Auditors_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Auditors_CanInsert(ref result);
                return result;
            }
            private static bool __Auditors_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Auditors_CanUpdate(ref result);
                return result;
            }
            private static bool __Auditors_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Auditors_CanDelete(ref result);
                return result;
            }
            private static bool __Auditors_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Auditors_CanRead(ref result);
                return result;
            }
            private static void __Auditors_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Auditor e)
            {
                d.Auditors_Inserting(e);
            }
            private static void __Auditors_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Auditor e)
            {
                d.Auditors_Inserted(e);
            }
            private static void __Auditors_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Auditor e)
            {
                d.Auditors_Updating(e);
            }
            private static void __Auditors_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Auditor e)
            {
                d.Auditors_Updated(e);
            }
            private static void __Auditors_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Auditor e)
            {
                d.Auditors_Deleting(e);
            }
            private static void __Auditors_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Auditor e)
            {
                d.Auditors_Deleted(e);
            }
            private static void __Auditors_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Auditor e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Auditors_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Auditor, bool>> __Auditors_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Auditor, bool>> filter = null;
                d.Auditors_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audit>
                __AuditsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Audit>(
                    "Audits",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Audits_Filter);
            private static bool __Audits_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audits_CanInsert(ref result);
                return result;
            }
            private static bool __Audits_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audits_CanUpdate(ref result);
                return result;
            }
            private static bool __Audits_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audits_CanDelete(ref result);
                return result;
            }
            private static bool __Audits_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Audits_CanRead(ref result);
                return result;
            }
            private static void __Audits_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audit e)
            {
                d.Audits_Inserting(e);
            }
            private static void __Audits_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audit e)
            {
                d.Audits_Inserted(e);
            }
            private static void __Audits_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audit e)
            {
                d.Audits_Updating(e);
            }
            private static void __Audits_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audit e)
            {
                d.Audits_Updated(e);
            }
            private static void __Audits_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audit e)
            {
                d.Audits_Deleting(e);
            }
            private static void __Audits_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audit e)
            {
                d.Audits_Deleted(e);
            }
            private static void __Audits_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Audits_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Audit, bool>> __Audits_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Audit, bool>> filter = null;
                d.Audits_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditStatus>
                __AuditStatusesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditStatus>(
                    "AuditStatuses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditStatuses_Filter);
            private static bool __AuditStatuses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditStatuses_CanInsert(ref result);
                return result;
            }
            private static bool __AuditStatuses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditStatuses_CanUpdate(ref result);
                return result;
            }
            private static bool __AuditStatuses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditStatuses_CanDelete(ref result);
                return result;
            }
            private static bool __AuditStatuses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditStatuses_CanRead(ref result);
                return result;
            }
            private static void __AuditStatuses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditStatus e)
            {
                d.AuditStatuses_Inserting(e);
            }
            private static void __AuditStatuses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditStatus e)
            {
                d.AuditStatuses_Inserted(e);
            }
            private static void __AuditStatuses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditStatus e)
            {
                d.AuditStatuses_Updating(e);
            }
            private static void __AuditStatuses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditStatus e)
            {
                d.AuditStatuses_Updated(e);
            }
            private static void __AuditStatuses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditStatus e)
            {
                d.AuditStatuses_Deleting(e);
            }
            private static void __AuditStatuses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditStatus e)
            {
                d.AuditStatuses_Deleted(e);
            }
            private static void __AuditStatuses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AuditStatuses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditStatus, bool>> __AuditStatuses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditStatus, bool>> filter = null;
                d.AuditStatuses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditType>
                __AuditTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditType>(
                    "AuditTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AuditTypes_Filter);
            private static bool __AuditTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditTypes_CanInsert(ref result);
                return result;
            }
            private static bool __AuditTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __AuditTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditTypes_CanDelete(ref result);
                return result;
            }
            private static bool __AuditTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AuditTypes_CanRead(ref result);
                return result;
            }
            private static void __AuditTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditType e)
            {
                d.AuditTypes_Inserting(e);
            }
            private static void __AuditTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditType e)
            {
                d.AuditTypes_Inserted(e);
            }
            private static void __AuditTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditType e)
            {
                d.AuditTypes_Updating(e);
            }
            private static void __AuditTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditType e)
            {
                d.AuditTypes_Updated(e);
            }
            private static void __AuditTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditType e)
            {
                d.AuditTypes_Deleting(e);
            }
            private static void __AuditTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditType e)
            {
                d.AuditTypes_Deleted(e);
            }
            private static void __AuditTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AuditType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AuditTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditType, bool>> __AuditTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AuditType, bool>> filter = null;
                d.AuditTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "Employees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> __Employees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.FindingAction>
                __FindingActionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.FindingAction>(
                    "FindingActions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__FindingActions_Filter);
            private static bool __FindingActions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.FindingActions_CanInsert(ref result);
                return result;
            }
            private static bool __FindingActions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.FindingActions_CanUpdate(ref result);
                return result;
            }
            private static bool __FindingActions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.FindingActions_CanDelete(ref result);
                return result;
            }
            private static bool __FindingActions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.FindingActions_CanRead(ref result);
                return result;
            }
            private static void __FindingActions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.FindingAction e)
            {
                d.FindingActions_Inserting(e);
            }
            private static void __FindingActions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.FindingAction e)
            {
                d.FindingActions_Inserted(e);
            }
            private static void __FindingActions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.FindingAction e)
            {
                d.FindingActions_Updating(e);
            }
            private static void __FindingActions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.FindingAction e)
            {
                d.FindingActions_Updated(e);
            }
            private static void __FindingActions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.FindingAction e)
            {
                d.FindingActions_Deleting(e);
            }
            private static void __FindingActions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.FindingAction e)
            {
                d.FindingActions_Deleted(e);
            }
            private static void __FindingActions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.FindingAction e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.FindingActions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.FindingAction, bool>> __FindingActions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.FindingAction, bool>> filter = null;
                d.FindingActions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditFinding>
                __MyAssignedAuditFindingsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AuditFinding>(
                    "MyAssignedAuditFindings",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedAuditFindings_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedAuditFindings_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedAuditFindings_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedAuditFindings_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedAuditFindings_PreprocessQuery);
            private static bool __MyAssignedAuditFindings_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyAssignedAuditFindings_CanExecute(ref r);
                return r;
            }
            private static void __MyAssignedAuditFindings_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyAssignedAuditFindings_Executing();
            }
            private static void __MyAssignedAuditFindings_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyAssignedAuditFindings_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AuditFinding>)args[0]);
            }
            private static void __MyAssignedAuditFindings_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyAssignedAuditFindings_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyAssignedAuditFindings_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.AuditFinding> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.AuditFinding>)args[0];
                d.MyAssignedAuditFindings_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.FindingAction>
                __MyAuditFindingActionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.FindingAction>(
                    "MyAuditFindingActions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuditFindingActions_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuditFindingActions_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuditFindingActions_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuditFindingActions_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAuditFindingActions_PreprocessQuery);
            private static bool __MyAuditFindingActions_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyAuditFindingActions_CanExecute(ref r);
                return r;
            }
            private static void __MyAuditFindingActions_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyAuditFindingActions_Executing();
            }
            private static void __MyAuditFindingActions_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyAuditFindingActions_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.FindingAction>)args[0]);
            }
            private static void __MyAuditFindingActions_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyAuditFindingActions_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyAuditFindingActions_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.FindingAction> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.FindingAction>)args[0];
                d.MyAuditFindingActions_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
