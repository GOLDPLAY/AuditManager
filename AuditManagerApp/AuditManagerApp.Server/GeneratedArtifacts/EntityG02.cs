

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class AuditFinding : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the AuditFinding entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AuditFinding()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AuditFinding(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AuditFinding> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.AuditFinding.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFinding_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditFinding_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FindingReference
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingReference);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingReference, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingReference_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingReference_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingReference_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FindingDescription
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingDescription);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime FindingDate
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingDate);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TargetResolutionDate
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.TargetResolutionDate);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.TargetResolutionDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetResolutionDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetResolutionDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetResolutionDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FindingImpactAssessment
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingImpactAssessment);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingImpactAssessment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingImpactAssessment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingImpactAssessment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FindingImpactAssessment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ImmediateAction
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.ImmediateAction);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.ImmediateAction, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImmediateAction_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImmediateAction_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ImmediateAction_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CorrectiveAndPreventativeAction
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.CorrectiveAndPreventativeAction);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.CorrectiveAndPreventativeAction, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveAndPreventativeAction_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveAndPreventativeAction_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveAndPreventativeAction_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CorrectiveAndPreventativeActionTargetDate
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.CorrectiveAndPreventativeActionTargetDate);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.CorrectiveAndPreventativeActionTargetDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveAndPreventativeActionTargetDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveAndPreventativeActionTargetDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrectiveAndPreventativeActionTargetDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateCorrectiveAndPreventativeActionClosed
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.DateCorrectiveAndPreventativeActionClosed);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.DateCorrectiveAndPreventativeActionClosed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCorrectiveAndPreventativeActionClosed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCorrectiveAndPreventativeActionClosed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCorrectiveAndPreventativeActionClosed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateFindingClosed
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.DateFindingClosed);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.DateFindingClosed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateFindingClosed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateFindingClosed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateFindingClosed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee AssignedTo
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.AssignedTo);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.AssignedTo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.FindingAction> FindingAction
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingAction);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.FindingAction> FindingActionQuery
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetQuery(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingAction);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Audit Audit
        {
            get
            {
                return global::LightSwitchApplication.AuditFinding.DetailsClass.GetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Audit);
            }
            set
            {
                global::LightSwitchApplication.AuditFinding.DetailsClass.SetValue(this, global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Audit, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audit_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.AuditFinding,
                global::LightSwitchApplication.AuditFinding.DetailsClass,
                global::LightSwitchApplication.AuditFinding.DetailsClass.IImplementation,
                global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass>.Entry
                __AuditFindingEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass>.Entry(
                    global::LightSwitchApplication.AuditFinding.DetailsClass.__AuditFinding_CreateNew,
                    global::LightSwitchApplication.AuditFinding.DetailsClass.__AuditFinding_Created,
                    global::LightSwitchApplication.AuditFinding.DetailsClass.__AuditFinding_AllowSaveWithErrors);
            private static global::LightSwitchApplication.AuditFinding __AuditFinding_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AuditFinding> es)
            {
                return new global::LightSwitchApplication.AuditFinding(es);
            }
            private static void __AuditFinding_Created(global::LightSwitchApplication.AuditFinding e)
            {
                e.AuditFinding_Created();
            }
            private static bool __AuditFinding_AllowSaveWithErrors(global::LightSwitchApplication.AuditFinding e)
            {
                bool result = false;
                e.AuditFinding_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string> FindingReference
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingReference) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string> FindingDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime> FindingDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime> TargetResolutionDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.TargetResolutionDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string> FindingImpactAssessment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingImpactAssessment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string> ImmediateAction
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.ImmediateAction) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string> CorrectiveAndPreventativeAction
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.CorrectiveAndPreventativeAction) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>> CorrectiveAndPreventativeActionTargetDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.CorrectiveAndPreventativeActionTargetDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>> DateCorrectiveAndPreventativeActionClosed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.DateCorrectiveAndPreventativeActionClosed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>> DateFindingClosed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.DateFindingClosed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Employee> AssignedTo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.AssignedTo) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.FindingAction> FindingAction
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingAction) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.FindingAction>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Audit> Audit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Audit) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Audit>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string FindingReference { get; set; }
                new string FindingDescription { get; set; }
                new global::System.DateTime FindingDate { get; set; }
                new global::System.DateTime TargetResolutionDate { get; set; }
                new string FindingImpactAssessment { get; set; }
                new string ImmediateAction { get; set; }
                new string CorrectiveAndPreventativeAction { get; set; }
                new global::System.Nullable<global::System.DateTime> CorrectiveAndPreventativeActionTargetDate { get; set; }
                new global::System.Nullable<global::System.DateTime> DateCorrectiveAndPreventativeActionClosed { get; set; }
                new global::System.Nullable<global::System.DateTime> DateFindingClosed { get; set; }
                new string Notes { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssignedTo { get; set; }
                new global::System.Collections.IEnumerable FindingAction { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Audit { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, int>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry
                    FindingReference = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry(
                        "FindingReference",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingReference_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingReference_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingReference_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingReference_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingReference_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingReference_OnValueChanged);
                private static void _FindingReference_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._FindingReference, sf);
                }
                private static bool _FindingReference_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.FindingReference_IsReadOnly(ref result);
                    return result;
                }
                private static void _FindingReference_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FindingReference_Validate(r);
                }
                private static string _FindingReference_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.FindingReference;
                }
                private static void _FindingReference_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FindingReference = v;
                }
                private static void _FindingReference_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.FindingReference_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry
                    FindingDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry(
                        "FindingDescription",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDescription_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDescription_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDescription_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDescription_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDescription_OnValueChanged);
                private static void _FindingDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._FindingDescription, sf);
                }
                private static bool _FindingDescription_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.FindingDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _FindingDescription_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FindingDescription_Validate(r);
                }
                private static string _FindingDescription_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.FindingDescription;
                }
                private static void _FindingDescription_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FindingDescription = v;
                }
                private static void _FindingDescription_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.FindingDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>.Entry
                    FindingDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>.Entry(
                        "FindingDate",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDate_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDate_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDate_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDate_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingDate_OnValueChanged);
                private static void _FindingDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._FindingDate, sf);
                }
                private static bool _FindingDate_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.FindingDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _FindingDate_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FindingDate_Validate(r);
                }
                private static global::System.DateTime _FindingDate_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.FindingDate;
                }
                private static void _FindingDate_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.FindingDate = global::LightSwitchApplication.AuditFinding.DetailsClass.TruncateDate(v);
                }
                private static void _FindingDate_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.FindingDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>.Entry
                    TargetResolutionDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>.Entry(
                        "TargetResolutionDate",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._TargetResolutionDate_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._TargetResolutionDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._TargetResolutionDate_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._TargetResolutionDate_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._TargetResolutionDate_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._TargetResolutionDate_OnValueChanged);
                private static void _TargetResolutionDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._TargetResolutionDate, sf);
                }
                private static bool _TargetResolutionDate_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.TargetResolutionDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _TargetResolutionDate_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TargetResolutionDate_Validate(r);
                }
                private static global::System.DateTime _TargetResolutionDate_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.TargetResolutionDate;
                }
                private static void _TargetResolutionDate_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TargetResolutionDate = global::LightSwitchApplication.AuditFinding.DetailsClass.TruncateDate(v);
                }
                private static void _TargetResolutionDate_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.TargetResolutionDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry
                    FindingImpactAssessment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry(
                        "FindingImpactAssessment",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingImpactAssessment_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingImpactAssessment_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingImpactAssessment_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingImpactAssessment_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingImpactAssessment_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingImpactAssessment_OnValueChanged);
                private static void _FindingImpactAssessment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._FindingImpactAssessment, sf);
                }
                private static bool _FindingImpactAssessment_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.FindingImpactAssessment_IsReadOnly(ref result);
                    return result;
                }
                private static void _FindingImpactAssessment_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FindingImpactAssessment_Validate(r);
                }
                private static string _FindingImpactAssessment_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.FindingImpactAssessment;
                }
                private static void _FindingImpactAssessment_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FindingImpactAssessment = v;
                }
                private static void _FindingImpactAssessment_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.FindingImpactAssessment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry
                    ImmediateAction = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry(
                        "ImmediateAction",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ImmediateAction_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ImmediateAction_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ImmediateAction_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ImmediateAction_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ImmediateAction_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ImmediateAction_OnValueChanged);
                private static void _ImmediateAction_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._ImmediateAction, sf);
                }
                private static bool _ImmediateAction_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.ImmediateAction_IsReadOnly(ref result);
                    return result;
                }
                private static void _ImmediateAction_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ImmediateAction_Validate(r);
                }
                private static string _ImmediateAction_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.ImmediateAction;
                }
                private static void _ImmediateAction_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ImmediateAction = v;
                }
                private static void _ImmediateAction_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.ImmediateAction_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry
                    CorrectiveAndPreventativeAction = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry(
                        "CorrectiveAndPreventativeAction",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeAction_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeAction_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeAction_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeAction_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeAction_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeAction_OnValueChanged);
                private static void _CorrectiveAndPreventativeAction_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._CorrectiveAndPreventativeAction, sf);
                }
                private static bool _CorrectiveAndPreventativeAction_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.CorrectiveAndPreventativeAction_IsReadOnly(ref result);
                    return result;
                }
                private static void _CorrectiveAndPreventativeAction_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CorrectiveAndPreventativeAction_Validate(r);
                }
                private static string _CorrectiveAndPreventativeAction_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.CorrectiveAndPreventativeAction;
                }
                private static void _CorrectiveAndPreventativeAction_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CorrectiveAndPreventativeAction = v;
                }
                private static void _CorrectiveAndPreventativeAction_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.CorrectiveAndPreventativeAction_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CorrectiveAndPreventativeActionTargetDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CorrectiveAndPreventativeActionTargetDate",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeActionTargetDate_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeActionTargetDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeActionTargetDate_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeActionTargetDate_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeActionTargetDate_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CorrectiveAndPreventativeActionTargetDate_OnValueChanged);
                private static void _CorrectiveAndPreventativeActionTargetDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._CorrectiveAndPreventativeActionTargetDate, sf);
                }
                private static bool _CorrectiveAndPreventativeActionTargetDate_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.CorrectiveAndPreventativeActionTargetDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CorrectiveAndPreventativeActionTargetDate_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CorrectiveAndPreventativeActionTargetDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CorrectiveAndPreventativeActionTargetDate_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.CorrectiveAndPreventativeActionTargetDate;
                }
                private static void _CorrectiveAndPreventativeActionTargetDate_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.CorrectiveAndPreventativeActionTargetDate = global::LightSwitchApplication.AuditFinding.DetailsClass.TruncateDate(v);
                }
                private static void _CorrectiveAndPreventativeActionTargetDate_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.CorrectiveAndPreventativeActionTargetDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateCorrectiveAndPreventativeActionClosed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateCorrectiveAndPreventativeActionClosed",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateCorrectiveAndPreventativeActionClosed_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateCorrectiveAndPreventativeActionClosed_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateCorrectiveAndPreventativeActionClosed_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateCorrectiveAndPreventativeActionClosed_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateCorrectiveAndPreventativeActionClosed_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateCorrectiveAndPreventativeActionClosed_OnValueChanged);
                private static void _DateCorrectiveAndPreventativeActionClosed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._DateCorrectiveAndPreventativeActionClosed, sf);
                }
                private static bool _DateCorrectiveAndPreventativeActionClosed_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.DateCorrectiveAndPreventativeActionClosed_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateCorrectiveAndPreventativeActionClosed_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateCorrectiveAndPreventativeActionClosed_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateCorrectiveAndPreventativeActionClosed_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.DateCorrectiveAndPreventativeActionClosed;
                }
                private static void _DateCorrectiveAndPreventativeActionClosed_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateCorrectiveAndPreventativeActionClosed = global::LightSwitchApplication.AuditFinding.DetailsClass.TruncateDate(v);
                }
                private static void _DateCorrectiveAndPreventativeActionClosed_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.DateCorrectiveAndPreventativeActionClosed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateFindingClosed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateFindingClosed",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateFindingClosed_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateFindingClosed_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateFindingClosed_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateFindingClosed_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateFindingClosed_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._DateFindingClosed_OnValueChanged);
                private static void _DateFindingClosed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._DateFindingClosed, sf);
                }
                private static bool _DateFindingClosed_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.DateFindingClosed_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateFindingClosed_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateFindingClosed_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateFindingClosed_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.DateFindingClosed;
                }
                private static void _DateFindingClosed_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateFindingClosed = global::LightSwitchApplication.AuditFinding.DetailsClass.TruncateDate(v);
                }
                private static void _DateFindingClosed_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.DateFindingClosed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    AssignedTo = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "AssignedTo",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._AssignedTo_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._AssignedTo_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._AssignedTo_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._AssignedTo_GetCoreImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._AssignedTo_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._AssignedTo_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._AssignedTo_Refresh,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._AssignedTo_OnValueChanged);
                private static void _AssignedTo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedTo, sf);
                }
                private static bool _AssignedTo_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.AssignedTo_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedTo_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedTo_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssignedTo_GetCoreImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedTo;
                }
                private static global::LightSwitchApplication.Employee _AssignedTo_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo, (i, ev) => i.AssignedTo = ev, v);
                }
                private static void _AssignedTo_Refresh(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.AssignedTo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.FindingAction>.Entry
                    FindingAction = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.FindingAction>.Entry(
                        "FindingAction",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingAction_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingAction_GetReferencedEntities,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._FindingAction_GetEntityCollection);
                private static void _FindingAction_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.FindingAction>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._FindingAction, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.FindingAction> _FindingAction_GetReferencedEntities(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.FindingAction, global::LightSwitchApplication.FindingAction.DetailsClass>(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.FindingAction, ref d._FindingAction);
                }
                private static global::System.Collections.IEnumerable _FindingAction_GetEntityCollection(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.FindingAction;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Audit>.Entry
                    Audit = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Audit>.Entry(
                        "Audit",
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Audit_Stub,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Audit_ComputeIsReadOnly,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Audit_Validate,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Audit_GetCoreImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Audit_GetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Audit_SetImplementationValue,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Audit_Refresh,
                        global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties._Audit_OnValueChanged);
                private static void _Audit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AuditFinding.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Audit>.Data> c, global::LightSwitchApplication.AuditFinding.DetailsClass d, object sf)
                {
                    c(d, ref d._Audit, sf);
                }
                private static bool _Audit_ComputeIsReadOnly(global::LightSwitchApplication.AuditFinding e)
                {
                    bool result = false;
                    e.Audit_IsReadOnly(ref result);
                    return result;
                }
                private static void _Audit_Validate(global::LightSwitchApplication.AuditFinding e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Audit_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Audit_GetCoreImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.ImplementationEntity.Audit;
                }
                private static global::LightSwitchApplication.Audit _Audit_GetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass>(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Audit, ref d._Audit);
                }
                private static void _Audit_SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass d, global::LightSwitchApplication.Audit v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Audit, ref d._Audit, (i, ev) => i.Audit = ev, v);
                }
                private static void _Audit_Refresh(global::LightSwitchApplication.AuditFinding.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.AuditFinding.DetailsClass.PropertySetProperties.Audit, ref d._Audit);
                }
                private static void _Audit_OnValueChanged(global::LightSwitchApplication.AuditFinding e)
                {
                    e.Audit_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data _FindingReference;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data _FindingDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>.Data _FindingDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.DateTime>.Data _TargetResolutionDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data _FindingImpactAssessment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data _ImmediateAction;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data _CorrectiveAndPreventativeAction;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CorrectiveAndPreventativeActionTargetDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateCorrectiveAndPreventativeActionClosed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateFindingClosed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Employee>.Data _AssignedTo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.FindingAction>.Data _FindingAction;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass, global::LightSwitchApplication.Audit>.Data _Audit;
            
        }
    
        #endregion
    }
    
    #endregion
}
