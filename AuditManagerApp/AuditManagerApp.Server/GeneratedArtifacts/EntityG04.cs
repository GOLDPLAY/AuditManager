

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class Audit : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Audit entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Audit()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Audit(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Audit> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Audit.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audit_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Audit_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Audit.DetailsClass.SetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AuditCode
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditCode);
            }
            set
            {
                global::LightSwitchApplication.Audit.DetailsClass.SetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AuditDescription
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditDescription);
            }
            set
            {
                global::LightSwitchApplication.Audit.DetailsClass.SetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime SchduledDate
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.SchduledDate);
            }
            set
            {
                global::LightSwitchApplication.Audit.DetailsClass.SetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.SchduledDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchduledDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchduledDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SchduledDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateStarted
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.DateStarted);
            }
            set
            {
                global::LightSwitchApplication.Audit.DetailsClass.SetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.DateStarted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateStarted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateStarted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateStarted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateCompleted
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.DateCompleted);
            }
            set
            {
                global::LightSwitchApplication.Audit.DetailsClass.SetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.DateCompleted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCompleted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCompleted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCompleted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Audit.DetailsClass.SetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AuditType AuditType
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditType);
            }
            set
            {
                global::LightSwitchApplication.Audit.DetailsClass.SetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.AuditStatus AuditStatus
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditStatus);
            }
            set
            {
                global::LightSwitchApplication.Audit.DetailsClass.SetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AuditStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AuditAuditor> AuditAuditors
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditAuditors);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AuditAuditor> AuditAuditorsQuery
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetQuery(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditAuditors);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.AuditFinding> AuditFindings
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetValue(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditFindings);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.AuditFinding> AuditFindingsQuery
        {
            get
            {
                return global::LightSwitchApplication.Audit.DetailsClass.GetQuery(this, global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditFindings);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Audit,
                global::LightSwitchApplication.Audit.DetailsClass,
                global::LightSwitchApplication.Audit.DetailsClass.IImplementation,
                global::LightSwitchApplication.Audit.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass>.Entry
                __AuditEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass>.Entry(
                    global::LightSwitchApplication.Audit.DetailsClass.__Audit_CreateNew,
                    global::LightSwitchApplication.Audit.DetailsClass.__Audit_Created,
                    global::LightSwitchApplication.Audit.DetailsClass.__Audit_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Audit __Audit_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Audit> es)
            {
                return new global::LightSwitchApplication.Audit(es);
            }
            private static void __Audit_Created(global::LightSwitchApplication.Audit e)
            {
                e.Audit_Created();
            }
            private static bool __Audit_AllowSaveWithErrors(global::LightSwitchApplication.Audit e)
            {
                bool result = false;
                e.Audit_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Audit.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string> AuditCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string> AuditDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.DateTime> SchduledDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.SchduledDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>> DateStarted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.DateStarted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>> DateCompleted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.DateCompleted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditType> AuditType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditStatus> AuditStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditStatus>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditAuditor> AuditAuditors
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditAuditors) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditAuditor>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditFinding> AuditFindings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditFindings) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditFinding>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string AuditCode { get; set; }
                new string AuditDescription { get; set; }
                new global::System.DateTime SchduledDate { get; set; }
                new global::System.Nullable<global::System.DateTime> DateStarted { get; set; }
                new global::System.Nullable<global::System.DateTime> DateCompleted { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AuditType { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AuditStatus { get; set; }
                new global::System.Collections.IEnumerable AuditAuditors { get; }
                new global::System.Collections.IEnumerable AuditFindings { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, int>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Entry
                    AuditCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Entry(
                        "AuditCode",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditCode_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditCode_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditCode_GetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditCode_SetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditCode_OnValueChanged);
                private static void _AuditCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._AuditCode, sf);
                }
                private static bool _AuditCode_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.AuditCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _AuditCode_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AuditCode_Validate(r);
                }
                private static string _AuditCode_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.AuditCode;
                }
                private static void _AuditCode_SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AuditCode = v;
                }
                private static void _AuditCode_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.AuditCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Entry
                    AuditDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Entry(
                        "AuditDescription",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditDescription_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditDescription_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditDescription_GetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditDescription_SetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditDescription_OnValueChanged);
                private static void _AuditDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._AuditDescription, sf);
                }
                private static bool _AuditDescription_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.AuditDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _AuditDescription_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AuditDescription_Validate(r);
                }
                private static string _AuditDescription_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.AuditDescription;
                }
                private static void _AuditDescription_SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AuditDescription = v;
                }
                private static void _AuditDescription_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.AuditDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.DateTime>.Entry
                    SchduledDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.DateTime>.Entry(
                        "SchduledDate",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._SchduledDate_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._SchduledDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._SchduledDate_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._SchduledDate_GetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._SchduledDate_SetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._SchduledDate_OnValueChanged);
                private static void _SchduledDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._SchduledDate, sf);
                }
                private static bool _SchduledDate_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.SchduledDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _SchduledDate_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SchduledDate_Validate(r);
                }
                private static global::System.DateTime _SchduledDate_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.SchduledDate;
                }
                private static void _SchduledDate_SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.SchduledDate = global::LightSwitchApplication.Audit.DetailsClass.TruncateDate(v);
                }
                private static void _SchduledDate_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.SchduledDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateStarted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateStarted",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateStarted_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateStarted_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateStarted_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateStarted_GetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateStarted_SetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateStarted_OnValueChanged);
                private static void _DateStarted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._DateStarted, sf);
                }
                private static bool _DateStarted_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.DateStarted_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateStarted_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateStarted_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateStarted_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.DateStarted;
                }
                private static void _DateStarted_SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateStarted = global::LightSwitchApplication.Audit.DetailsClass.TruncateDate(v);
                }
                private static void _DateStarted_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.DateStarted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateCompleted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateCompleted",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateCompleted_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateCompleted_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateCompleted_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateCompleted_GetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateCompleted_SetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._DateCompleted_OnValueChanged);
                private static void _DateCompleted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._DateCompleted, sf);
                }
                private static bool _DateCompleted_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.DateCompleted_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateCompleted_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateCompleted_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateCompleted_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.DateCompleted;
                }
                private static void _DateCompleted_SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateCompleted = global::LightSwitchApplication.Audit.DetailsClass.TruncateDate(v);
                }
                private static void _DateCompleted_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.DateCompleted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditType>.Entry
                    AuditType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditType>.Entry(
                        "AuditType",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditType_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditType_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditType_GetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditType_SetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditType_Refresh,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditType_OnValueChanged);
                private static void _AuditType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditType>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._AuditType, sf);
                }
                private static bool _AuditType_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.AuditType_IsReadOnly(ref result);
                    return result;
                }
                private static void _AuditType_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AuditType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AuditType_GetCoreImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.AuditType;
                }
                private static global::LightSwitchApplication.AuditType _AuditType_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.AuditType, global::LightSwitchApplication.AuditType.DetailsClass>(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditType, ref d._AuditType);
                }
                private static void _AuditType_SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d, global::LightSwitchApplication.AuditType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditType, ref d._AuditType, (i, ev) => i.AuditType = ev, v);
                }
                private static void _AuditType_Refresh(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditType, ref d._AuditType);
                }
                private static void _AuditType_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.AuditType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditStatus>.Entry
                    AuditStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditStatus>.Entry(
                        "AuditStatus",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditStatus_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditStatus_Validate,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditStatus_GetCoreImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditStatus_GetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditStatus_SetImplementationValue,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditStatus_Refresh,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditStatus_OnValueChanged);
                private static void _AuditStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditStatus>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._AuditStatus, sf);
                }
                private static bool _AuditStatus_ComputeIsReadOnly(global::LightSwitchApplication.Audit e)
                {
                    bool result = false;
                    e.AuditStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _AuditStatus_Validate(global::LightSwitchApplication.Audit e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AuditStatus_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AuditStatus_GetCoreImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.AuditStatus;
                }
                private static global::LightSwitchApplication.AuditStatus _AuditStatus_GetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.AuditStatus, global::LightSwitchApplication.AuditStatus.DetailsClass>(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditStatus, ref d._AuditStatus);
                }
                private static void _AuditStatus_SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass d, global::LightSwitchApplication.AuditStatus v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditStatus, ref d._AuditStatus, (i, ev) => i.AuditStatus = ev, v);
                }
                private static void _AuditStatus_Refresh(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditStatus, ref d._AuditStatus);
                }
                private static void _AuditStatus_OnValueChanged(global::LightSwitchApplication.Audit e)
                {
                    e.AuditStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditAuditor>.Entry
                    AuditAuditors = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditAuditor>.Entry(
                        "AuditAuditors",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditAuditors_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditAuditors_GetReferencedEntities,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditAuditors_GetEntityCollection);
                private static void _AuditAuditors_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditAuditor>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._AuditAuditors, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AuditAuditor> _AuditAuditors_GetReferencedEntities(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AuditAuditor, global::LightSwitchApplication.AuditAuditor.DetailsClass>(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditAuditors, ref d._AuditAuditors);
                }
                private static global::System.Collections.IEnumerable _AuditAuditors_GetEntityCollection(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.AuditAuditors;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditFinding>.Entry
                    AuditFindings = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditFinding>.Entry(
                        "AuditFindings",
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditFindings_Stub,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditFindings_GetReferencedEntities,
                        global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties._AuditFindings_GetEntityCollection);
                private static void _AuditFindings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Audit.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditFinding>.Data> c, global::LightSwitchApplication.Audit.DetailsClass d, object sf)
                {
                    c(d, ref d._AuditFindings, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AuditFinding> _AuditFindings_GetReferencedEntities(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.AuditFinding, global::LightSwitchApplication.AuditFinding.DetailsClass>(global::LightSwitchApplication.Audit.DetailsClass.PropertySetProperties.AuditFindings, ref d._AuditFindings);
                }
                private static global::System.Collections.IEnumerable _AuditFindings_GetEntityCollection(global::LightSwitchApplication.Audit.DetailsClass d)
                {
                    return d.ImplementationEntity.AuditFindings;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Data _AuditCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Data _AuditDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.DateTime>.Data _SchduledDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateStarted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateCompleted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditType>.Data _AuditType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditStatus>.Data _AuditStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditAuditor>.Data _AuditAuditors;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Audit, global::LightSwitchApplication.Audit.DetailsClass, global::LightSwitchApplication.AuditFinding>.Data _AuditFindings;
            
        }
    
        #endregion
    }
    
    #endregion
}
